apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: "com.apollographql.apollo"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "tiny.angry.kitten.homeapplication"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        lintOptions { warning 'InvalidPackage' }
        checkReleaseBuilds false
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    //fixes multiple files with same name error
    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

def arrow_version = '0.11.0'

dependencies {
    implementation("com.apollographql.apollo:apollo-runtime:+")

    // optional: for coroutines support
    implementation("com.apollographql.apollo:apollo-coroutines-support:+")

    implementation fileTree(include: ['*.jar'], dir: 'libs')


    def fragment_version = "1.2.5"

    // Java language implementation
    implementation "androidx.fragment:fragment:$fragment_version"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    implementation 'com.lukelorusso:verticalseekbar:1.2.3'

    //arrow
    implementation "io.arrow-kt:arrow-core:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    //micronaut
    annotationProcessor 'io.micronaut:micronaut-inject-java:2.0.2'
    compileOnly 'io.micronaut:micronaut-inject-java:2.0.2'

    implementation 'io.vertx:vertx-mqtt:4.0.0.Beta2'

    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.11.2'

    implementation 'com.google.firebase:firebase-analytics:17.5.0'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation "org.koin:koin-android:$koin_version"
    // or Koin for Lifecycle scoping
    implementation "org.koin:koin-androidx-scope:$koin_version"
    // or Koin for Android Architecture ViewModel
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    // or Koin for Android Fragment Factory (unstable version)
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    implementation 'com.google.android.material:material:1.2.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9-native-mt'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.core:core-ktx:1.3.1"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'

    implementation "androidx.startup:startup-runtime:1.0.0-beta01"

    def nav_version = "2.3.0"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

apollo {
    // instruct the compiler to generate Kotlin models
    generateKotlinModels.set(true)
}